@model IEnumerable<SchoolRegister.ViewModels.VM.StudentVm>

@{
    ViewData["Title"] = "Students";
}

<h1>@ViewData["Title"]</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.StudentName)
            </th>
            <th>
                @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.AverageGrade)
            </th>
            <th>
                @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.Group.Name)
            </th>
            <th>
                @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.Parent.ParentName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StudentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AverageGrade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Group.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Parent.ParentName)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Grades", "Index", "Grade", new { id = item.Id }) |
                @(item.Group is null
                    ? Html.ActionLink("Add Student to Group",
                    "AttachStudentToGroup",
                    "Group",
                    new {
                        studentId = item.Id
                    })
                    : Html.ActionLink("Remove Student from Group",
                    "DetachStudentFromGroup",
                    "Group",
                    new {
                        studentId = item.Id
                    }))
            </td>
        </tr>
}
    </tbody>
</table>
